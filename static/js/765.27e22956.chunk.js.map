{"version":3,"file":"static/js/765.27e22956.chunk.js","mappings":"kNACA,EAA6B,yBAA7B,EAAmE,yB,iBC4BnE,MAvBA,WACE,OAAyBA,EAAAA,EAAAA,UAAS,IAAlC,eAAMC,EAAN,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,0FACHC,MAAK,SAAAC,GAAE,OAAEA,EAAGC,MAAL,IAAaF,MAAK,SAAAC,GACxBJ,EAAUI,EAAGE,QAChB,GACF,GAAC,KAGA,gBAAKC,UAAWC,EAAhB,SACGT,EAAOA,EAAOU,KAAI,SAAAL,GAAE,OAAM,SAAC,KAAD,CAAqBM,GAAE,iBAAYN,EAAGO,IAAtC,UACvB,iBAAKJ,UAAWC,EAAhB,WACE,gBAAKI,MAAO,IAAKC,IAAG,0CAAqCT,EAAGU,aAAeC,IAAKX,EAAGY,OAASZ,EAAGa,QAC/F,wBAAKb,EAAGa,MAAMb,EAAGY,aAHeE,EAAAA,EAAAA,MAAjB,IAMlB,IAGR,C,uDC1BM,IAkBIA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACZ,EAAIa,GAWvD,OAREb,IAFFa,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Home/Home.module.css?58dd","components/Home/Home.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"Home_moviesList__XOOaK\",\"moviesItem\":\"Home_moviesItem__sLS+C\"};","import { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Home.module.css'\nimport { Link } from 'react-router-dom';\n\n\nfunction Name() {\n  const[movies,setMovies]= useState([]);\n\n  useEffect(()=>{\n    fetch(\"https://api.themoviedb.org/3/trending/all/day?api_key=9095dc0682bb2e62c57b5cbea7d9ca43\")\n      .then(el=>el.json()).then(el=>{\n        setMovies(el.results)\n    })\n  },[])\n\n  return(\n    <div className={css.moviesList}>\n      {movies?movies.map(el => ( <Link key={nanoid()} to={`movies/${el.id}`}>\n          <div className={css.moviesItem} >\n            <img width={400} src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`} alt={el.title || el.name}/>\n            <h2>{el.name||el.title}</h2>\n          </div>\n        </Link>\n      )):\"\"}\n    </div>\n  )\n}\n\nexport default Name;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","movies","setMovies","useEffect","fetch","then","el","json","results","className","css","map","to","id","width","src","poster_path","alt","title","name","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}